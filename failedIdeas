# import bcrypt
# @bot.message_handler(commands=['adminlogin'])
# def admin_login(message):
#     text = message.text.replace(" ","").replace("/adminlogin","").split(',')
#     admin_id = text[0]
#     admin_psw = str(text[1]).encode()

#     sql = ("SELECT * FROM botadmin")
#     cursor.execute(sql)
#     result = cursor.fetchall()

#     for record in result:
#         if(admin_id == record[1]):
#             if bcrypt.checkpw(admin_psw,str(record[2]).encode()):
#                 print('true')
#                 # save user_id in database(validuser)
#             else:
#                 print('false psw')
#         else:
#             print('no such username')


#     # user = text.split(",")
#     # bot.reply_to(message,admin_id)
#     # bot.reply_to(message,admin_psw)


# i thought it'll be good to have login
# but no. just add the user id of who u want to make admin



# ×××××××××××××××××××××××××××××××××××××××××



# first add to channel, make admin, then command add channel by botadmin
# @bot.channel_post_handler(commands=['new_channel'])
# def new_channel(message):
#     # if writer is admin then:
#     if(message.chat.type == 'channel'):
#         channelList = get_channels()
#         if str(message.chat.id) not in channelList:
#             add_channel(message.chat.title,message.chat.id)
#             bot.reply_to(message,'done!')
#             # delete msg after 5 sec
#         else:
#             bot.reply_to(message,'already have it!')
#             # delete msg after 5 sec

# def add_channel(name,id):
#     db = mysql.connector.connect(**config)
#     cursor = db.cursor()
#     sql = ('INSERT INTO telchannels (channel_name,channel_id) VALUES (%s,%s)')
#     cursor.execute(sql,(name,id))
#     db.commit()

# thought add channel is good
# but save channel in db urself so that noone can add channel wo ur permission


# i thought having redis near sql is good but it was full of shit and overeng..




# def broadcast_channels_link():
#     # get channels from db
#     channels = channel_handler.get_channels()
#     # make link message
#     for channel in channels:
#         try:
#             channel_info = bot.get_chat(channel[2])
#             if(channel_info.username != None):
#                 # make beauty msg with link to it
#                 channel_link_message = message_handler.make_channel_link_message(channel_info)
#                 # send to groups
#                 groups = group_handler.get_groups()
#                 for group in groups:
#                     try:
#                         bot.send_message(int(group),channel_link_message)
#                     except Exception as e:
#                         print(e)
#                         print(groups)
#                         print(group)
#                         pass
#         except Exception as e:
#             if(e.error_code == 403 and e.description == 'Forbidden: bot is not a member of the channel chat'):
#                 channel_handler.delete_channel(channel[2])
#                 message_handler.delete_channel_messages(channel[2])
#             else:
#                 print(e)
#             pass

# def make_channel_link_message(channel_info):
#     link = 'https://t.me/{}'.format(channel_info.username)
#     telegram_at_sign = '@{}'.format(channel_info.username)
#     text = '''
#     {}
#     لینک کانال {}
#     {} {}
#     {} {}
#     {}
#     برای مشاهده روی لینک کانال کلیک کنید
#     '''.format(
#         emoji.emojize(':fire:'),
#         channel_info.title,
#         emoji.emojize(':fire:'), link,
#         emoji.emojize(':fire:'), telegram_at_sign,
#         emoji.emojize(':fire: :rose:'),
#     )
#     return text

# schedule.every(10).seconds.do(broadcast_channels_link)